apiVersion: v1
kind: Service
metadata:
  name: maestro-api
spec:
  selector:
    app: maestro-api
  ports:
    - protocol: TCP
      port: 80
{{- if eq .Values.use_ingress "true" }}
  type: ClusterIP
{{- else}}
  type: LoadBalancer
{{- end}}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: maestro-api
  labels:
    heritage: maestro-api
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: maestro-api
    spec:
      volumes:
        - name: config
          configMap:
            name: maestro-cm
      containers:
        - command:
          - /go/bin/agent-linux
          - --collector.host-port=jaeger-collector.jaeger.svc.cluster.local:14267
          image: jaegertracing/jaeger-agent:1.1
          imagePullPolicy: IfNotPresent
          name: jaeger-agent
          ports:
          - containerPort: 5775
            protocol: UDP
          - containerPort: 5778
            protocol: TCP
          - containerPort: 6831
            protocol: UDP
          - containerPort: 6832
            protocol: UDP
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
            requests:
              cpu: 25m
              memory: 15Mi
        - name: maestro-api
          command:
            - /app/maestro
            - start
            - -p
            - "80"
            - --incluster
            - --json
          image: quay.io/tfgco/maestro:v{{ .Chart.Version }}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config
              mountPath: /app/config/local.yaml
              subPath: local.yaml
          env:
            - name: MAESTRO_EXTENSIONS_PG_HOST
              value: {{ .Values.postgres_host }}
            - name: MAESTRO_EXTENSIONS_PG_PORT
              value: "{{ .Values.postgres_port }}"
            - name: MAESTRO_EXTENSIONS_PG_USER
              value: {{ .Values.postgres_user }}
            - name: MAESTRO_EXTENSIONS_PG_PASS
              value: {{ .Values.postgres_password }}
            - name: MAESTRO_RUN_SETUP
              value: "true"
            - name: MAESTRO_EXTENSIONS_PG_DATABASE
              value: {{ .Values.postgres_database }}
            - name: MAESTRO_GOOGLE_CLIENT_ID
              value: {{ .Values.google_clientid }}
            - name: MAESTRO_GOOGLE_CLIENT_SECRET
              value: {{ .Values.google_clientsecret }}
            - name: MAESTRO_OAUTH_ACCEPTEDDOMAINS
              value: {{ .Values.oauth_domains }}
            - name: MAESTRO_EXTENSIONS_REDIS_URL
              value: {{ .Values.redis_url }}
            - name: MAESTRO_BASICAUTH_USERNAME
              value: {{ .Values.basicauth_user }}
            - name: MAESTRO_BASICAUTH_PASSWORD
              value: {{ .Values.basicauth_pass }}
            - name: MAESTRO_BASICAUTH_TRYOAUTHIFUNSET
              value: "true"
            - name: MAESTRO_JAEGER_DISABLED
              value: "{{ .Values.jaeger_disabled }}"
            - name: MAESTRO_JAEGER_SAMPLINGPROBABILITY
              value: "{{ .Values.jaeger_samplingprobability }}"
            {{- if ne .Values.newrelic_app "" }}
            {{- if ne .Values.newrelic_key "" }}
            - name: MAESTRO_NEWRELIC_APP
              valueFrom:
                secretKeyRef:
                  name: maestro-secret
                  key: newrelicapp
            - name: MAESTRO_NEWRELIC_KEY
              valueFrom:
                secretKeyRef:
                  name: maestro-secret
                  key: newrelickey
            {{- end}}
            {{- end}}
      terminationGracePeriodSeconds: 3600
